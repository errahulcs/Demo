<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.cookedspecially" />
	<mvc:annotation-driven></mvc:annotation-driven>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/category/**"/>
			<mvc:mapping path="/dish/**"/>
			<mvc:mapping path="/menu/**"/>
			<mvc:mapping path="/restaurant/**"/>
			<!-- <mvc:mapping path="/customer/**"/> -->
			<!--  <mvc:mapping path="/order/**"/>  -->
			<mvc:mapping path="/seatingTable/**"/>
			<mvc:exclude-mapping path="/reports/**"/>
			<mvc:exclude-mapping path="/menu/show/**"/>
			<mvc:exclude-mapping path="/menu/getjson/**"/>
			<mvc:exclude-mapping path="/menu/getallmenusjson/**"/>
			<mvc:exclude-mapping path="/menu/manifest/**"/>
			<mvc:exclude-mapping path="/menu/getmenusjsonbyuname/**"/>
			<mvc:exclude-mapping path="/seatingTable/setStatus/**"/>
			<mvc:exclude-mapping path="/seatingTable/gettablesjsonbyuname/**"/>
			<mvc:exclude-mapping path="/seatingTable/getRestaurantTables.json/**"/>
			<mvc:exclude-mapping path="/restaurant/resources/**"/>
			<mvc:exclude-mapping path="/restaurant/getrestaurantinfo/**"/>
			<mvc:exclude-mapping path="/restaurant/getDeliveryAreas/**"/>
			<bean class="com.cookedspecially.interceptors.AdminInterceptors" />
		</mvc:interceptor>	
	</mvc:interceptors>
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json"/>
                                <entry key="xml" value="application/xml"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
		<!-- 
		<property name="mediaTypes">
			<map>
				<entry key="html"> 
					<util:constant static-field="org.springframework.http.MediaType.TEXT_HTML_VALUE" />
				</entry>
				<entry key="json"> 
					<util:constant static-field="org.springframework.http.MediaType.APPLICATION_JSON_VALUE" />
				</entry>
			</map>
		</property>
		
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		-->
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="prefixJson" value="true" />
				</bean>
			</list>
		</property>
	</bean>
	 
	<bean id="jspViewResolver"	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="0" />
	</bean>

<!-- THYMELEAF: Template Resolver for email templates -->
<bean id="emailTemplateResolver" class="org.thymeleaf.templateresolver.ClassLoaderTemplateResolver">
    <property name="prefix" value="com/cookedspecially/view/" />
    <!-- <property name="templateMode" value="HTML5" /> -->
    <!-- <property name="characterEncoding" value="UTF-8" /> -->
    <property name="suffix" value=".html" />
    <property name="order" value="1" />
</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <property name="host" value="${mail.server.host}" />
	    <property name="port" value="${mail.server.port}" />
	    <property name="protocol" value="${mail.server.protocol}" />
	    <property name="username" value="${mail.server.username}" />
	    <property name="password" value="${mail.server.password}" />
	    <property name="javaMailProperties">
	        <props>
	            <prop key="mail.smtp.starttls.enable">true</prop>
	            <prop key="mail.smtp.auth">true</prop>
	            <!-- <prop key="mail.smtp.timeout">25000</prop> -->
	        </props>
    	</property>
	    <!-- 
	    <property name="javaMailProperties">
	        <util:properties location="classpath:javamail.properties" />
	    </property>
	    -->
	</bean>
	
	  <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
	    <property name="templateResolver" ref="emailTemplateResolver" />
	  </bean>

  <bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
    <property name="templateEngine" ref="templateEngine" />
    <property name="characterEncoding" value="UTF-8" />
    <property name="order" value="2" />
    <!-- <property name="viewNames" value="template/*" /> -->
  </bean>

<!-- 
	<bean id="urlMapping"
	
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="interceptors">
			<list>
				<ref local="localeChangeInterceptor" />
			</list>
		</property>
		<property name="urlMap">
			<map>
				<entry key="/login.html">
					<ref bean="loginController" />
				</entry>
			</map>
		</property>
	</bean>
	 
	 
	<bean id="loginValidator" class="net.roseindia.web.LoginValidator" />
-->

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<bean id="multipartResolver"
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <!-- <property name="maxUploadSize" value="1000000"/> -->
	</bean>
	<!--
	<bean class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="location" value="classpath:jasper-views.xml"/>
		<property name="order" value="0"/>
	</bean>
	-->
	<bean class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="location" value="classpath:report-view.xml"/>
		<property name="order" value="0"/>
	</bean>
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/" />
	<mvc:resources mapping="/images/**" location="/WEB-INF/images/" />
	<mvc:resources mapping="/css/**" location="/WEB-INF/css/" /> 
	<mvc:resources mapping="/themes/**" location="/WEB-INF/themes/" /> 
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="/WEB-INF/jdbc.properties" />

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.databaseurl}" p:username="${jdbc.username}"
		p:password="${jdbc.password}" />


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		 <property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property> 
		<!-- <property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<!-- <property name="dataSource" ref="dataSource" /> -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


</beans>
